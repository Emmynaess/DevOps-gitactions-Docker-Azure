name: Emmy - Fetch Weather Data, Test and Build Docker Image

on:
  workflow_dispatch:
    inputs:
      log_errors:
        description: "Log errors if tests fail"
        required: true
        default: "false"

env:
  SMHI_API_KEY: ${{ secrets.SMHI_API_KEY }}
  DOCKER_IMAGE_NAME: emmynaessrieback/devops_project_emmy

jobs:
  fetch_and_extract_temperature:
    name: Fetch Weather Data and Extract Temperature
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Fetch data from SMHI API
        env:
          SMHI_API_KEY: ${{ secrets.SMHI_API_KEY }}
        run: |
          API_URL="https://opendata-download-metfcst.smhi.se/api/category/pmp3g/version/2/geotype/point/lon/18.0686/lat/59.3293/data.json"
          curl -s "$API_URL" -o weather_data.json
          echo "Fetched data from SMHI API."

      - name: Display fetched data
        run: cat weather_data.json

      - name: Extract temperature from weather data
        run: |
          TEMP=$(jq '.timeSeries[0].parameters[] | select(.name == "t").values[0]' weather_data.json)
          echo "Extracted Temperature: $TEMP"
          echo "TEMP=$TEMP" >> $GITHUB_ENV

      - name: Run test
        run: |
          if [[ -z "$TEMP" ]]; then
            echo "Test failed: Temperature value is empty" > error_log.txt
            exit 1
          else
            echo "Test passed: Temperature value is $TEMP"
          fi
        continue-on-error: true

      - name: Upload Error Log
        if: failure() && github.event.inputs.log_errors == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: error_log
          path: error_log.txt

  build_and_push_docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: fetch_and_extract_temperature

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.9-slim'

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.EMMY_DOCKER_USERNAME }}
          password: ${{ secrets.EMMY_DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile 
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:latest
